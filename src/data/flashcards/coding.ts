import { Flashcard } from '@/types/flashcard';

export const codingFlashcards: Flashcard[] = [
  // --- Coding - Beginner ---
  { id: 'code1', question: 'Vad är en variabel i programmering?', answer: 'En variabel är en namngiven behållare för att lagra data eller värden i ett program.', category: 'coding', difficulty: 'beginner'},
  { id: 'code2', question: 'Vad är skillnaden mellan "==" och "===" i JavaScript?', answer: '"==" jämför värden (med typomvandling), "===" jämför både värde och datatyp.', category: 'coding', difficulty: 'beginner'},
  { id: 'code3', question: 'Vad är en array (lista)?', answer: 'En array är en ordnad samling av element (värden), ofta av samma eller olika datatyper.', category: 'coding', difficulty: 'beginner'},
  { id: 'code4', question: 'Vad är en funktion?', answer: 'En funktion är ett namngivet kodblock som utför en specifik uppgift och kan återanvändas.', category: 'coding', difficulty: 'beginner'},
  { id: 'code5', question: 'Vad är en loop (slinga)?', answer: 'En loop används för att upprepa ett kodblock ett visst antal gånger eller tills ett villkor uppfylls.', category: 'coding', difficulty: 'beginner'},
  { id: 'code_beg6', question: 'Vad är HTML?', answer: 'HTML (HyperText Markup Language) används för att strukturera innehållet på en webbsida.', category: 'coding', difficulty: 'beginner'},
  { id: 'code_beg7', question: 'Vad är CSS?', answer: 'CSS (Cascading Style Sheets) används för att bestämma utseendet och layouten på en webbsida.', category: 'coding', difficulty: 'beginner'},
  { id: 'code_beg8', question: 'Vad är en kommentar i kod?', answer: 'En kommentar är text i koden som ignoreras av datorn men hjälper programmerare att förstå koden.', category: 'coding', difficulty: 'beginner'},
  { id: 'code_beg9', question: 'Vad är ett programmeringsspråk?', answer: 'Ett formellt språk som används för att ge instruktioner till en dator.', category: 'coding', difficulty: 'beginner'},
  { id: 'code_beg10', question: 'Vad är "syntax" i programmering?', answer: 'Syntax är de regler som bestämmer hur giltig kod ska skrivas i ett visst programmeringsspråk.', category: 'coding', difficulty: 'beginner'},
  { id: 'code_beg11', question: 'Vad gör en "if"-sats?', answer: 'En "if"-sats (villkorssats) låter programmet utföra viss kod endast om ett specifikt villkor är sant.', category: 'coding', difficulty: 'beginner'},
  { id: 'code_beg12', question: 'Vad är en sträng (string)?', answer: 'En sträng är en sekvens av tecken, som används för att representera text.', category: 'coding', difficulty: 'beginner'},
  { id: 'code_beg13', question: 'Vad är ett heltal (integer)?', answer: 'Ett heltal är ett tal utan decimaldel (t.ex. 5, -10, 0).', category: 'coding', difficulty: 'beginner'},
  { id: 'code_beg14', question: 'Vad är ett flyttal (float)?', answer: 'Ett flyttal är ett tal med en decimaldel (t.ex. 3.14, -0.5).', category: 'coding', difficulty: 'beginner'},
  { id: 'code_beg15', question: 'Vad är en bugg i programmering?', answer: 'En bugg är ett fel eller en defekt i ett datorprogram som gör att det beter sig oväntat eller felaktigt.', category: 'coding', difficulty: 'beginner'},
  { id: 'code_beg16', question: 'Vad är debugging?', answer: 'Debugging är processen att hitta och åtgärda buggar (fel) i programkod.', category: 'coding', difficulty: 'beginner'},
  { id: 'code_beg17', question: 'Vad är en algoritm?', answer: 'En algoritm är en steg-för-steg-procedur eller formel för att lösa ett problem eller utföra en uppgift.', category: 'coding', difficulty: 'beginner'},
  { id: 'code_beg18', question: 'Vad menas med "output"?', answer: 'Output är den data eller information som ett program producerar eller visar.', category: 'coding', difficulty: 'beginner'},
  { id: 'code_beg19', question: 'Vad menas med "input"?', answer: 'Input är den data eller information som matas in i ett program för bearbetning.', category: 'coding', difficulty: 'beginner'},
  { id: 'code_beg20', question: 'Vad är pseudokod?', answer: 'Pseudokod är en informell beskrivning av en algoritm eller ett program, skriven på ett sätt som liknar vanlig text men med programmeringsliknande struktur.', category: 'coding', difficulty: 'beginner'},
  { id: 'py1', question: 'Vad är Python?', answer: 'Ett populärt, tolkat högnivåspråk känt för sin läsbarhet.', category: 'coding', difficulty: 'beginner'},
  { id: 'py2', question: 'Vad är skillnaden mellan lista och tuple i Python?', answer: 'Lista `[]` är föränderlig (mutable), tuple `()` är oföränderlig (immutable).', category: 'coding', difficulty: 'beginner'},
  { id: 'py3', question: 'Hur definierar man en funktion i Python?', answer: 'Med `def funktionsnamn(parametrar):`.', category: 'coding', difficulty: 'beginner'},
  { id: 'py4', question: 'Vad är list comprehension i Python?', answer: 'Ett kompakt sätt att skapa listor. Ex: `[x*x for x in range(5)]`.', category: 'coding', difficulty: 'beginner'},
  { id: 'py5', question: 'Vad är en dictionary i Python?', answer: 'En oordnad (i äldre Python) samling av key-value-par `{}`.', category: 'coding', difficulty: 'beginner'},
  { id: 'py_beg6', question: 'Vad gör `print()`-funktionen i Python?', answer: 'Skriver ut värden till konsolen.', category: 'coding', difficulty: 'beginner'},

  // --- Coding - Intermediate ---
  { id: 'code6', question: 'Vad är en React-komponent?', answer: 'En återanvändbar, självständig kodbit som renderar en del av användargränssnittet (UI).', category: 'coding', difficulty: 'intermediate'},
  { id: 'code7', question: 'Vad är "props" i React?', answer: 'Props (properties) är data som skickas från en föräldrakomponent till en barnkomponent (enkelriktat dataflöde).', category: 'coding', difficulty: 'intermediate'},
  { id: 'code8', question: 'Förklara React "state".', answer: 'State är data som hanteras internt inom en komponent och som kan ändras över tid, vilket triggar omrendering.', category: 'coding', difficulty: 'intermediate'},
  { id: 'code9', question: 'Vad är "useEffect" i React?', answer: 'En Hook för att hantera sidoeffekter (t.ex. datahämtning, prenumerationer, DOM-manipulation) i funktionella komponenter.', category: 'coding', difficulty: 'intermediate'},
  { id: 'code10', question: 'Vad är "virtuell DOM" i React?', answer: 'En representation av den faktiska DOM i minnet. React jämför den virtuella DOM:en för att effektivt uppdatera den riktiga DOM:en.', category: 'coding', difficulty: 'intermediate'},
  { id: 'code_int6', question: 'Vad är API (Application Programming Interface)?', answer: 'Ett gränssnitt som definierar hur olika mjukvarukomponenter ska interagera med varandra.', category: 'coding', difficulty: 'intermediate'},
  { id: 'code_int7', question: 'Vad är Git och vad används det till?', answer: 'Git är ett distribuerat versionshanteringssystem för att spåra ändringar i kod och samarbeta i projekt.', category: 'coding', difficulty: 'intermediate'},
  { id: 'code_int8', question: 'Vad är skillnaden mellan `null` och `undefined` i JavaScript?', answer: '`undefined` betyder att en variabel har deklarerats men inte tilldelats ett värde. `null` är ett avsiktligt tilldelat värde som representerar "inget värde".', category: 'coding', difficulty: 'intermediate'},
  { id: 'code_int9', question: 'Vad är JSON (JavaScript Object Notation)?', answer: 'Ett lättviktsformat för datautbyte, baserat på JavaScripts objektsyntax, men är språkoberoende.', category: 'coding', difficulty: 'intermediate'},
  { id: 'code_int10', question: 'Vad är objektorienterad programmering (OOP)?', answer: 'Ett programmeringsparadigm baserat på konceptet "objekt", som kan innehålla data (attribut) och kod (metoder). Exempelprinciper: inkapsling, arv, polymorfism.', category: 'coding', difficulty: 'intermediate'},
  { id: 'code_int11', question: 'Vad är en klass i OOP?', answer: 'En mall eller ritning för att skapa objekt. Den definierar objektets attribut och metoder.', category: 'coding', difficulty: 'intermediate'},
  { id: 'code_int12', question: 'Vad är en databas?', answer: 'En organiserad samling av strukturerad information eller data, vanligtvis lagrad elektroniskt i ett datorsystem.', category: 'coding', difficulty: 'intermediate'},
  { id: 'code_int13', question: 'Vad är SQL (Structured Query Language)?', answer: 'Ett standardspråk för att hantera och manipulera data i relationella databaser.', category: 'coding', difficulty: 'intermediate'},
  { id: 'code_int14', question: 'Vad är en callback-funktion i JavaScript?', answer: 'En funktion som skickas som argument till en annan funktion och som är avsedd att köras senare, ofta efter en asynkron operation.', category: 'coding', difficulty: 'intermediate'},
  { id: 'code_int15', question: 'Vad är skillnaden mellan HTTP och HTTPS?', answer: 'HTTPS (Hypertext Transfer Protocol Secure) är den säkra versionen av HTTP. Kommunikationen krypteras med SSL/TLS.', category: 'coding', difficulty: 'intermediate'},
  { id: 'code_int16', question: 'Vad är en framework (ramverk) inom programmering?', answer: 'En uppsättning färdiga komponenter, verktyg och regler som underlättar utvecklingen av mjukvara genom att erbjuda en struktur.', category: 'coding', difficulty: 'intermediate'},
  { id: 'code_int17', question: 'Vad är ett library (bibliotek)?', answer: 'En samling förskriven kod (funktioner, klasser) som programmerare kan använda för att utföra specifika uppgifter utan att skriva koden själva.', category: 'coding', difficulty: 'intermediate'},
  { id: 'code_int18', question: 'Vad är DOM (Document Object Model)?', answer: 'En programmeringsgränssnitt för HTML- och XML-dokument. Det representerar sidans struktur som ett träd av objekt.', category: 'coding', difficulty: 'intermediate'},
  { id: 'code_int19', question: 'Vad är "scope" i JavaScript?', answer: 'Scope bestämmer tillgängligheten (synligheten) av variabler. JavaScript har globalt scope, funktionsscope och blockscope (med let/const).', category: 'coding', difficulty: 'intermediate'},
  { id: 'code_int20', question: 'Vad är skillnaden mellan synkron och asynkron kod?', answer: 'Synkron kod exekveras sekventiellt, en operation i taget. Asynkron kod tillåter att operationer körs i bakgrunden utan att blockera huvudtråden.', category: 'coding', difficulty: 'intermediate'},
  { id: 'py-int1', question: 'Skillnad mellan `append()` och `extend()` för listor?', answer: '`append()` lägger till ett element. `extend()` lägger till alla element från en iterable.', category: 'coding', difficulty: 'intermediate'},
  { id: 'py-int2', question: 'Vad är en Python-modul?', answer: 'En `.py`-fil med Python-kod som kan importeras.', category: 'coding', difficulty: 'intermediate'},
  { id: 'py_int3', question: 'Vad är `try...except`-blocket?', answer: 'Används för att fånga och hantera fel (exceptions) under körning.', category: 'coding', difficulty: 'intermediate'},

  // --- Coding - Advanced ---
  { id: 'ai1', question: 'Vad är maskininlärning?', answer: 'Ett område inom AI där system lär sig från data för att identifiera mönster och fatta beslut utan explicit programmering.', category: 'coding', difficulty: 'advanced'},
  { id: 'ai2', question: 'Vad är skillnaden mellan övervakad och oövervakad inlärning?', answer: 'Övervakad använder märkta data (input + korrekt output). Oövervakad använder omärkta data för att hitta struktur.', category: 'coding', difficulty: 'advanced'},
  { id: 'ai3', question: 'Vad är ett neuralt nätverk?', answer: 'En beräkningsmodell inspirerad av hjärnans struktur, bestående av sammankopplade noder (neuroner) i lager.', category: 'coding', difficulty: 'advanced'},
  { id: 'ai4', question: 'Vad är djupinlärning (deep learning)?', answer: 'En typ av maskininlärning som använder djupa neurala nätverk (många lager) för att lära sig komplexa representationer från data.', category: 'coding', difficulty: 'advanced'},
  { id: 'ai5', question: 'Vad är en tränings-/testuppsättning?', answer: 'Data delas upp: träningsdata används för att träna modellen, testdata för att utvärdera dess prestanda på osedda data.', category: 'coding', difficulty: 'advanced'},
  { id: 'code_adv6', question: 'Förklara asynkron programmering i JavaScript (Promises, async/await).', answer: 'Promises representerar ett framtida värde från en asynkron operation. Async/await ger en mer synkronliknande syntax för att arbeta med Promises.', category: 'coding', difficulty: 'advanced'},
  { id: 'code_adv7', question: 'Vad är REST (Representational State Transfer)?', answer: 'En arkitekturstil för webbtjänster som använder standard HTTP-metoder (GET, POST, PUT, DELETE) och fokuserar på resurser.', category: 'coding', difficulty: 'advanced'},
  { id: 'code_adv8', question: 'Vad är WebSockets?', answer: 'Ett kommunikationsprotokoll som möjliggör tvåvägskommunikation i realtid mellan en klient och en server över en enda TCP-anslutning.', category: 'coding', difficulty: 'advanced'},
  { id: 'code_adv9', question: 'Förklara begreppet "dependency injection".', answer: 'Ett designmönster där en komponents beroenden (andra objekt den behöver) tillhandahålls externt istället för att komponenten skapar dem själv.', category: 'coding', difficulty: 'advanced'},
  { id: 'code_adv10', question: 'Vad är skillnaden mellan SQL och NoSQL-databaser?', answer: 'SQL-databaser är relationella (tabellbaserade) med ett fast schema. NoSQL-databaser är icke-relationella och erbjuder mer flexibla datamodeller (dokument, key-value, graf etc.).', category: 'coding', difficulty: 'advanced'},
  { id: 'code_adv11', question: 'Vad är Docker?', answer: 'En plattform för att utveckla, leverera och köra applikationer i isolerade miljöer som kallas containrar.', category: 'coding', difficulty: 'advanced'},
  { id: 'code_adv12', question: 'Vad är microservices (mikrotjänster)?', answer: 'En arkitekturstil där en applikation struktureras som en samling små, oberoende och löst kopplade tjänster.', category: 'coding', difficulty: 'advanced'},
  { id: 'code_adv13', question: 'Förklara begreppet "Big O notation".', answer: 'Big O notation används för att beskriva en algoritms tid- eller minneskomplexitet i förhållande till indatastorleken, fokuserat på det asymptotiska beteendet (värsta fallet).', category: 'coding', difficulty: 'advanced'},
  { id: 'code_adv14', question: 'Vad är testdriven utveckling (TDD)?', answer: 'En utvecklingsprocess där man först skriver ett automatiserat testfall som misslyckas, sedan skriver minimal kod för att få testet att passera, och slutligen refaktorerar koden.', category: 'coding', difficulty: 'advanced'},
  { id: 'code_adv15', question: 'Vad är SOLID-principerna inom OOP?', answer: 'En uppsättning av fem designprinciper för att skapa mer förståelig, flexibel och underhållbar objektorienterad kod: Single Responsibility, Open/Closed, Liskov Substitution, Interface Segregation, Dependency Inversion.', category: 'coding', difficulty: 'advanced'},
  { id: 'code_adv16', question: 'Vad är ORM (Object-Relational Mapping)?', answer: 'En teknik som konverterar data mellan objektsystem (som i OOP-språk) och relationella databaser, vilket låter utvecklare interagera med databasen via objekt.', category: 'coding', difficulty: 'advanced'},
  { id: 'code_adv17', question: 'Vad är skillnaden mellan stack och heap i minneshantering?', answer: 'Stacken används för statisk minnesallokering (funktionsanrop, lokala variabler) med LIFO-principen. Heapet används för dynamisk minnesallokering (objekt skapade vid körning).', category: 'coding', difficulty: 'advanced'},
  { id: 'code_adv18', question: 'Vad är en hash-tabell (hash map)?', answer: 'En datastruktur som implementerar en associativ array (key-value par) genom att använda en hashfunktion för att beräkna ett index (en "hink") där ett värde kan hittas.', category: 'coding', difficulty: 'advanced'},
  { id: 'code_adv19', question: 'Vad är "garbage collection"?', answer: 'En automatisk minneshanteringsprocess i vissa programmeringsspråk som identifierar och frigör minne som inte längre används av programmet.', category: 'coding', difficulty: 'advanced'},
  { id: 'code_adv20', question: 'Vad är CI/CD (Continuous Integration/Continuous Deployment)?', answer: 'En praxis inom mjukvaruutveckling där kodändringar automatiskt byggs, testas och (ofta) driftsätts kontinuerligt, vilket snabbar upp leveranscykeln.', category: 'coding', difficulty: 'advanced'},
  { id: 'py-adv1', question: 'Vad är en decorator i Python?', answer: 'En funktion som tar en annan funktion som argument, lägger till funktionalitet och returnerar den modifierade funktionen (ofta med `@`-syntax).', category: 'coding', difficulty: 'advanced'},
  { id: 'py-adv2', question: 'Förklara GIL (Global Interpreter Lock) i CPython.', answer: 'En mutex som gör att endast en tråd kan exekvera Python bytecode åt gången i en process, begränsar CPU-bunden parallellism.', category: 'coding', difficulty: 'advanced'},
  { id: 'py_adv3', question: 'Vad är en generator i Python?', answer: 'En funktion som använder `yield` för att returnera en iterator, genererar värden ett i taget på begäran (minneseffektivt).', category: 'coding', difficulty: 'advanced'},

  // --- Coding - Expert ---
  { id: 'code-ex1', question: 'Förklara begreppet "closure" i JavaScript.', answer: 'En closure är kombinationen av en funktion och dess omgivande tillstånd (lexikaliska miljö), vilket ger funktionen åtkomst till yttre variabler även efter att det yttre scopet avslutats.', category: 'coding', difficulty: 'expert'},
  { id: 'code-ex2', question: 'Vad är "event loop" i JavaScript?', answer: 'En mekanism som hanterar exekvering av kod, händelser och köade uppgifter (callbacks, promises) för att möjliggöra icke-blockerande asynkronitet i en entrådad miljö.', category: 'coding', difficulty: 'expert'},
  { id: 'code_ex3', question: 'Vad är skillnaden mellan processer och trådar (threads)?', answer: 'Processer har separata minnesutrymmen, medan trådar inom samma process delar minnesutrymme. Trådar är lättviktigare att skapa och växla mellan.', category: 'coding', difficulty: 'expert'},
  { id: 'code_ex4', question: 'Förklara CAP-teoremet inom distribuerade system.', answer: 'CAP-teoremet säger att ett distribuerat system kan endast garantera två av tre egenskaper: Consistency (Konsistens), Availability (Tillgänglighet), Partition Tolerance (Partitionstolerans).', category: 'coding', difficulty: 'expert'},
  { id: 'code_ex5', question: 'Vad är funktionell programmering (FP)?', answer: 'Ett programmeringsparadigm som behandlar beräkning som utvärdering av matematiska funktioner och undviker tillståndsförändringar och muterbar data. Betonar rena funktioner och immutabilitet.', category: 'coding', difficulty: 'expert'},
  { id: 'code_ex6', question: 'Förklara begreppet idempotens i samband med API:er.', answer: 'En operation är idempotent om den kan utföras flera gånger utan att resultatet ändras efter den första lyckade exekveringen (t.ex. HTTP PUT och DELETE).', category: 'coding', difficulty: 'expert'},
  { id: 'code_ex7', question: 'Vad är en bloom filter?', answer: 'En probabilistisk datastruktur som används för att testa om ett element är medlem i en mängd. Kan ge falska positiva svar, men aldrig falska negativa.', category: 'coding', difficulty: 'expert'},
  { id: 'code_ex8', question: 'Diskutera Actor-modellen för samtidighet.', answer: 'En modell där "aktörer" är grundläggande enheter för beräkning. Varje aktör har ett tillstånd, kan ta emot meddelanden och skicka meddelanden till andra aktörer asynkront.', category: 'coding', difficulty: 'expert'},
  { id: 'code_ex9', question: 'Vad är skillnaden mellan stark och svag typning i programmeringsspråk?', answer: 'Stark typning förhindrar operationer mellan inkompatibla typer (kräver explicit konvertering). Svag typning tillåter implicit typomvandling.', category: 'coding', difficulty: 'expert'},
  { id: 'code_ex10', question: 'Förklara Raft-konsensusalgoritmen.', answer: 'En konsensusalgoritm för distribuerade system, designad för att vara mer förståelig än Paxos. Används för att replikera en logg över flera servrar på ett feltolerant sätt.', category: 'coding', difficulty: 'expert'},
  { id: 'code_ex11', question: 'Vad är homomorf kryptering?', answer: 'En form av kryptering som tillåter beräkningar att utföras på krypterad data utan att först dekryptera den. Resultatet av beräkningen är också krypterat.', category: 'coding', difficulty: 'expert'},
  { id: 'code_ex12', question: 'Förklara principen bakom Byzantine Fault Tolerance (BFT).', answer: 'BFT handlar om att bygga feltoleranta distribuerade system som kan fungera korrekt även om vissa komponenter (noder) fallerar eller beter sig godtyckligt eller illasinnat (Byzantine faults).', category: 'coding', difficulty: 'expert'},
  { id: 'code_ex13', question: 'Vad är en monad i funktionell programmering?', answer: 'En designpattern (abstraktion) som representerar beräkningar som sekvenser av operationer. Används för att hantera sidoeffekter, tillstånd, I/O etc. på ett rent sätt.', category: 'coding', difficulty: 'expert'},
  { id: 'code_ex14', question: 'Vad är skillnaden mellan kompilator och interpretator?', answer: 'En kompilator översätter hela källkoden till maskinkod (eller mellankod) innan exekvering. En interpretator exekverar källkoden rad för rad utan föregående kompilering.', category: 'coding', difficulty: 'expert'},
  { id: 'code_ex15', question: 'Diskutera för- och nackdelar med olika concurrency-modeller (t.ex. trådar, async/await, actors).', answer: 'Trådar (delat minne, risk för race conditions), Async/await (icke-blockerande I/O, enklare syntax, event loop), Actors (isolerat tillstånd, meddelandepassering, bra för distribuerade system).', category: 'coding', difficulty: 'expert'},
  { id: 'code_ex16', question: 'Vad är vektordatabaser och vad används de till?', answer: 'Databaser optimerade för att lagra och söka i högdimensionella vektorer (embeddings). Används ofta i AI/ML för likhetssökning, rekommendationssystem och semantisk sökning.', category: 'coding', difficulty: 'expert'},
  { id: 'code_ex17', question: 'Förklara begreppet "event sourcing".', answer: 'Ett arkitekturmönster där alla ändringar i applikationens tillstånd lagras som en sekvens av händelser (events), istället för att bara lagra det aktuella tillståndet.', category: 'coding', difficulty: 'expert'},
  { id: 'code_ex18', question: 'Vad är WebAssembly (Wasm)?', answer: 'Ett binärt instruktionsformat för en stackbaserad virtuell maskin. Designat som ett kompileringsmål för högpresterande webbapplikationer, körs i webbläsare och utanför.', category: 'coding', difficulty: 'expert'},
  { id: 'code_ex19', question: 'Vad är kvantdatorer och hur skiljer de sig från klassiska datorer?', answer: 'Kvantdatorer använder kvantmekaniska fenomen som superposition och sammanflätning för att utföra beräkningar. De använder kvantbitar (qubits) istället för klassiska bitar.', category: 'coding', difficulty: 'expert'},
  { id: 'code_ex20', question: 'Vad är zero-knowledge proofs?', answer: 'En kryptografisk metod där en part (prover) kan bevisa för en annan part (verifier) att ett påstående är sant, utan att avslöja någon information utöver sanningen i själva påståendet.', category: 'coding', difficulty: 'expert'},
  { id: 'py-ex1', question: 'Vad är metaclasses i Python?', answer: 'Klasser vars instanser är klasser. `type` är standardmetaklassen. Tillåter anpassning av klass-skapande.', category: 'coding', difficulty: 'expert'},
  { id: 'py_ex2', question: 'Förklara Pythons datamodell (data model).', answer: 'Beskriver hur objekt beter sig via speciella metoder (`__metod__`) som implementerar protokoll för t.ex. iteration, operatorer, attributåtkomst.', category: 'coding', difficulty: 'expert'},
];